{"ast":null,"code":"var _jsxFileName = \"/home/ansif/Programming/Projects/CryptoProject/frontend-crypto/src/pages/workSpace/WorkSpace.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Navbar from '../../components/navbar/Navbar';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './workspace.css';\nimport HomeImg from '../../assets/images/home.png';\nimport DownArrow from '../../assets/images/down_arrow.png';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkSpace() {\n  _s();\n\n  const [selectedCoin, setSelectedCoin] = useState({\n    name: 'Bitcoin',\n    price: 445,\n    key: 'BTC'\n  });\n  const [forecastData, setForecastData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [coins, setCoins] = useState([{\n    name: 'Etherium',\n    price: 445,\n    key: 'ETH'\n  }, {\n    name: 'Etherium classic',\n    price: 445,\n    key: 'ETC'\n  }, {\n    name: 'EOS',\n    price: 445,\n    key: 'EOS'\n  }, {\n    name: 'Cardano',\n    price: 445,\n    key: 'ADA'\n  }, {\n    name: 'Doge',\n    price: 445,\n    key: 'DOGE'\n  }, {\n    name: 'IOTA',\n    price: 445,\n    key: 'MIOTA'\n  }, {\n    name: 'LiteCoin',\n    price: 445,\n    key: 'LTC'\n  }, {\n    name: 'Maker',\n    price: 445,\n    key: 'MKR'\n  }, {\n    name: 'Monero',\n    price: 445,\n    key: 'XMR'\n  }, {\n    name: 'Stellar',\n    price: 445,\n    key: 'XLM'\n  }, {\n    name: 'Tron',\n    price: 445,\n    key: 'TRX'\n  }, {\n    name: 'ZCash',\n    price: 445,\n    key: 'ZEC'\n  }]);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Line Chart'\n      }\n    }\n  };\n\n  const getForecastData = async coinName => {\n    setLoading(true);\n    console.log('fdkgjlsdfkgjflgkj');\n\n    try {\n      let response = await axios.get('http://127.0.0.1:5000/', {\n        params: {\n          coin: coinName\n        }\n      }, {\n        'content-type': 'application/json',\n        'access-control-allow-origin': '*'\n      });\n\n      if (response) {\n        // success\n        const data = response.data; // data = JSON.Parse(data)\n        // data.map((d, id) => data[id] = -1 * parseInt(d))\n\n        console.log(data);\n        setForecastData(data);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getCoinData = async () => {\n    try {\n      let response = await axios.get('https://api.coingecko.com/api/v3/coins/zcash', {});\n\n      if (response) {\n        // success\n        const json = response.data; // json.forEach(coin => {\n        //     coins.forEach(coin2 => {\n        //         if (coin.symbol == coin2.key.toLowerCase()) {\n        //             console.log(coin)\n        //         }\n        //     })\n        // })\n      }\n    } catch (ex) {// response = null;\n    }\n  };\n\n  const foreCastLabelCreator = () => {\n    let now = new Date();\n    var date = new Date(now.setDate(now.getDate() - 30));\n    let timeArray = [];\n\n    for (let i = 0; i < 30; i++) {\n      timeArray.push(formatAMPM(date));\n      date.setMinutes(date.getDate() + 1);\n    } // console.log(timeArray)\n\n\n    return timeArray;\n  };\n\n  const previousPredictionLabelCreator = () => {\n    let date = new Date();\n    let timeArray = [];\n\n    for (let i = 0; i < 15; i++) {\n      timeArray.push(formatAMPM(date));\n      date.setMinutes(date.getMinutes() - 1);\n    } // console.log(timeArray)\n\n\n    return timeArray.reverse();\n  };\n\n  function formatAMPM(date) {\n    return date.toLocaleString();\n  }\n\n  useEffect(() => {\n    foreCastLabelCreator();\n    getForecastData('ethereum');\n  }, []);\n  const data1 = {\n    labels: foreCastLabelCreator(),\n    datasets: [// {\n    //     label: 'Dataset 1',\n    //     data: labels.map((i, index) => index),\n    //     borderColor: 'rgb(255, 99, 132)',\n    //     backgroundColor: 'rgba(255, 99, 132, 0.5)',\n    // },\n    {\n      label: 'Predicted Value',\n      data: forecastData,\n      borderColor: 'yellow',\n      backgroundColor: 'yellow'\n    }]\n  };\n  const data2 = {\n    labels: previousPredictionLabelCreator(),\n    datasets: [{\n      label: 'Actual Value',\n      data: [...new Array(15)].map(() => Math.round(Math.random() * 200)).map((i, index) => i),\n      borderColor: 'aqua',\n      backgroundColor: 'aqua'\n    }, {\n      label: 'Predicted Value',\n      data: [...new Array(15)].map(() => Math.round(Math.random() * 200)).map((i, index) => i),\n      borderColor: 'ghostwhite',\n      backgroundColor: 'ghostwhite'\n    }]\n  };\n  ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n  const CoinComponent = _ref => {\n    let {\n      coin\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coinComp\",\n      style: selectedCoin.name == coin.name ? {\n        // backgroundColor: '#0d9078',\n        color: 'white',\n        border: `1px solid #0d9078`,\n        transform: `scale(1.1)`\n      } : {},\n      onClick: () => setSelectedCoin(coin),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: coin.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: coin.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }, this);\n  };\n\n  useEffect(() => {\n    getCoinData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 30\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workSpace\",\n    style: {\n      background: `url(${HomeImg})`,\n      backgroundSize: 'cover'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sec_1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coinWrpr\",\n          children: coins.map(coin => /*#__PURE__*/_jsxDEV(CoinComponent, {\n            coin: coin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 44\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: DownArrow,\n            style: {\n              width: 25,\n              height: 25,\n              marginTop: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph_container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph_wrpr\",\n          style: {\n            backdropFilter: `blur(100px)`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading_wrpr\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selectedCoin.key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"$\", selectedCoin.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingTop: 50,\n              backdropFilter: `blur(100px)`\n            },\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              options: options,\n              data: data1,\n              style: {\n                width: 500,\n                height: '50vh',\n                color: 'yellow'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkSpace, \"hyYIVhxjxXagUmmj1UvubZxMxTE=\");\n\n_c = WorkSpace;\nexport default WorkSpace;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkSpace\");","map":{"version":3,"sources":["/home/ansif/Programming/Projects/CryptoProject/frontend-crypto/src/pages/workSpace/WorkSpace.js"],"names":["React","useEffect","useState","Line","Navbar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","HomeImg","DownArrow","axios","WorkSpace","selectedCoin","setSelectedCoin","name","price","key","forecastData","setForecastData","loading","setLoading","coins","setCoins","options","responsive","plugins","legend","position","title","display","text","getForecastData","coinName","console","log","response","get","params","coin","data","error","getCoinData","json","ex","foreCastLabelCreator","now","Date","date","setDate","getDate","timeArray","i","push","formatAMPM","setMinutes","previousPredictionLabelCreator","getMinutes","reverse","toLocaleString","data1","labels","datasets","label","borderColor","backgroundColor","data2","Array","map","Math","round","random","index","register","CoinComponent","color","border","transform","background","backgroundSize","width","height","marginTop","backdropFilter","paddingTop","flex"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport Navbar from '../../components/navbar/Navbar'\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport './workspace.css'\nimport HomeImg from '../../assets/images/home.png'\nimport DownArrow from '../../assets/images/down_arrow.png'\nimport axios from 'axios';\n\nfunction WorkSpace() {\n\n\n    const [selectedCoin, setSelectedCoin] = useState({ name: 'Bitcoin', price: 445, key: 'BTC' })\n\n    const [forecastData, setForecastData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const [coins, setCoins] = useState([\n        { name: 'Etherium', price: 445, key: 'ETH' },\n        { name: 'Etherium classic', price: 445, key: 'ETC' },\n        { name: 'EOS', price: 445, key: 'EOS' },\n        { name: 'Cardano', price: 445, key: 'ADA' },\n        { name: 'Doge', price: 445, key: 'DOGE' },\n        { name: 'IOTA', price: 445, key: 'MIOTA' },\n        { name: 'LiteCoin', price: 445, key: 'LTC' },\n        { name: 'Maker', price: 445, key: 'MKR' },\n        { name: 'Monero', price: 445, key: 'XMR' },\n        { name: 'Stellar', price: 445, key: 'XLM' },\n        { name: 'Tron', price: 445, key: 'TRX' },\n        { name: 'ZCash', price: 445, key: 'ZEC' },])\n    const options = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top',\n            },\n            title: {\n                display: false,\n                text: 'Chart.js Line Chart',\n            },\n        },\n    };\n\n    const getForecastData = async (coinName) => {\n        setLoading(true)\n        console.log('fdkgjlsdfkgjflgkj')\n        try {\n            let response = await axios.get('http://127.0.0.1:5000/', {\n                params: {\n                    coin: coinName\n                }\n            }, {\n                'content-type': 'application/json',\n                'access-control-allow-origin': '*'\n            });\n\n            if (response) {\n                // success\n                const data = response.data;\n                // data = JSON.Parse(data)\n                // data.map((d, id) => data[id] = -1 * parseInt(d))\n                console.log(data)\n                setForecastData(data)\n            }\n            setLoading(false)\n\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n\n    const getCoinData = async () => {\n        try {\n            let response = await axios.get('https://api.coingecko.com/api/v3/coins/zcash', {\n\n            });\n\n            if (response) {\n                // success\n                const json = response.data;\n                // json.forEach(coin => {\n                //     coins.forEach(coin2 => {\n                //         if (coin.symbol == coin2.key.toLowerCase()) {\n                //             console.log(coin)\n                //         }\n                //     })\n\n                // })\n            }\n        } catch (ex) {\n            // response = null;\n\n        }\n\n    }\n\n    const foreCastLabelCreator = () => {\n        let now = new Date();\n        var date = new Date(now.setDate(now.getDate() - 30));\n        let timeArray = [];\n        for (let i = 0; i < 30; i++) {\n            timeArray.push(formatAMPM(date))\n            date.setMinutes(date.getDate() + 1)\n        }\n\n        // console.log(timeArray)\n        return timeArray\n    }\n\n    const previousPredictionLabelCreator = () => {\n        let date = new Date();\n        let timeArray = [];\n        for (let i = 0; i < 15; i++) {\n            timeArray.push(formatAMPM(date))\n            date.setMinutes(date.getMinutes() - 1)\n        }\n\n        // console.log(timeArray)\n        return timeArray.reverse();\n    }\n\n\n    function formatAMPM(date) {\n\n        return date.toLocaleString();\n    }\n    useEffect(() => {\n        foreCastLabelCreator()\n        getForecastData('ethereum')\n    }, [])\n\n\n\n    const data1 = {\n        labels: foreCastLabelCreator(),\n\n        datasets: [\n            // {\n            //     label: 'Dataset 1',\n            //     data: labels.map((i, index) => index),\n            //     borderColor: 'rgb(255, 99, 132)',\n            //     backgroundColor: 'rgba(255, 99, 132, 0.5)',\n            // },\n            {\n                label: 'Predicted Value',\n                data: forecastData,\n                borderColor: 'yellow',\n                backgroundColor: 'yellow',\n\n            },\n        ],\n    };\n\n    const data2 = {\n        labels: previousPredictionLabelCreator(),\n\n        datasets: [\n            {\n                label: 'Actual Value',\n                data: [...new Array(15)]\n                    .map(() => Math.round(Math.random() * 200)).map((i, index) => i),\n                borderColor: 'aqua',\n                backgroundColor: 'aqua',\n            },\n            {\n                label: 'Predicted Value',\n                data: [...new Array(15)]\n                    .map(() => Math.round(Math.random() * 200)).map((i, index) => i),\n                borderColor: 'ghostwhite',\n                backgroundColor: 'ghostwhite',\n\n            },\n        ],\n    };\n    ChartJS.register(\n        CategoryScale,\n        LinearScale,\n        PointElement,\n        LineElement,\n        Title,\n        Tooltip,\n        Legend\n    );\n    const CoinComponent = ({ coin }) => {\n        return (<div className='coinComp'\n            style={selectedCoin.name == coin.name ? {\n                // backgroundColor: '#0d9078',\n                color: 'white',\n                border: `1px solid #0d9078`,\n                transform: `scale(1.1)`,\n\n            } : {}}\n            onClick={() => setSelectedCoin(coin)}\n\n        >\n            <h3>{coin.name}</h3>\n            <p>{coin.price}</p>\n        </div>)\n    }\n    useEffect(() => {\n        getCoinData()\n    }, [])\n\n    if (loading) return <div><h1>Loading</h1></div>\n\n    return (\n        <div\n            className='workSpace'\n            style={{\n                background: `url(${HomeImg})`,\n                backgroundSize: 'cover'\n            }}\n        >\n            <Navbar />\n            <div className='sec_1'\n\n            >\n                <div className='sideBar'\n\n                >\n                    <div className='coinWrpr' >\n                        {coins.map(coin => <CoinComponent coin={coin} />)}\n\n\n                    </div>\n                    <div className='overlay' >\n                        <img src={DownArrow} style={{ width: 25, height: 25, marginTop: 10 }} />\n\n                    </div>\n                </div>\n\n                <div className='graph_container'>\n                    <div\n                        className='graph_wrpr'\n                        style={{ backdropFilter: `blur(100px)` }}\n                    >\n                        <div className='heading_wrpr' >\n                            <h2>{selectedCoin.key}</h2>\n                            <p>${selectedCoin.price}</p>\n                        </div>\n\n                        <div\n                            style={{ paddingTop: 50, backdropFilter: `blur(100px)` }}\n                        >\n                            {/* <p>Forcaste 15 minutes</p> */}\n                            <Line\n                                options={options}\n                                data={data1}\n                                style={{ width: 500, height: '50vh', color: 'yellow', }}\n\n                            />\n                        </div>\n                    </div>\n\n                    {/* <div\n                        style={{ marginTop: 50 }}\n                    >\n\n                        <p>Previous Prediction</p>\n                        <Line\n                            options={options}\n                            data={data2}\n                            style={{ width: 500, height: '70vh', color: 'yellow', }}\n                        />\n\n                    </div> */}\n                </div>\n                <div style={{ flex: 3 }} ></div>\n            </div>\n        </div>\n    )\n}\n\nexport default WorkSpace"]},"metadata":{},"sourceType":"module"}