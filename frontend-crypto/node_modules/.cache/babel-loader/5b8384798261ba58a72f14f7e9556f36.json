{"ast":null,"code":"var _jsxFileName = \"/home/ansif/Programming/Projects/CryptoProject/src/pages/workSpace/WorkSpace.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Navbar from '../../components/navbar/Navbar';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './workspace.css';\nimport HomeImg from '../../assets/images/home.png';\nimport DownArrow from '../../assets/images/down_arrow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkSpace() {\n  _s();\n\n  const [selectedCoin, setSelectedCoin] = useState({\n    name: 'Bitcoin',\n    price: 445,\n    key: 'BTC'\n  });\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Line Chart'\n      }\n    }\n  };\n\n  const foreCastLabelCreator = () => {\n    let date = new Date();\n    let timeArray = [];\n\n    for (let i = 0; i < 15; i++) {\n      timeArray.push(formatAMPM(date));\n      date.setMinutes(date.getMinutes() + 1);\n    } // console.log(timeArray)\n\n\n    return timeArray;\n  };\n\n  const previousPredictionLabelCreator = () => {\n    let date = new Date();\n    let timeArray = [];\n\n    for (let i = 0; i < 15; i++) {\n      timeArray.push(formatAMPM(date));\n      date.setMinutes(date.getMinutes() - 1);\n    } // console.log(timeArray)\n\n\n    return timeArray.reverse();\n  };\n\n  function formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n  }\n\n  useEffect(() => {\n    foreCastLabelCreator();\n  }, []);\n  const data1 = {\n    labels: foreCastLabelCreator(),\n    datasets: [// {\n    //     label: 'Dataset 1',\n    //     data: labels.map((i, index) => index),\n    //     borderColor: 'rgb(255, 99, 132)',\n    //     backgroundColor: 'rgba(255, 99, 132, 0.5)',\n    // },\n    {\n      label: 'Predicted Value',\n      data: [...new Array(15)].map(() => Math.round(Math.random() * 200)).map((i, index) => i),\n      borderColor: 'yellow',\n      backgroundColor: 'yellow'\n    }]\n  };\n  const data2 = {\n    labels: previousPredictionLabelCreator(),\n    datasets: [{\n      label: 'Actual Value',\n      data: [...new Array(15)].map(() => Math.round(Math.random() * 200)).map((i, index) => i),\n      borderColor: 'aqua',\n      backgroundColor: 'aqua'\n    }, {\n      label: 'Predicted Value',\n      data: [...new Array(15)].map(() => Math.round(Math.random() * 200)).map((i, index) => i),\n      borderColor: 'ghostwhite',\n      backgroundColor: 'ghostwhite'\n    }]\n  };\n  ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n  const CoinComponent = _ref => {\n    let {\n      coin\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coinComp\",\n      style: selectedCoin.name == coin.name ? {\n        // backgroundColor: '#0d9078',\n        color: 'white',\n        border: `1px solid #0d9078`,\n        transform: `scale(1.2)`\n      } : {},\n      onClick: () => setSelectedCoin(coin),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: coin.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: coin.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workSpace\",\n    style: {\n      background: `url(${HomeImg})`,\n      backgroundSize: 'cover'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sec_1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coinWrpr\",\n          children: [{\n            name: 'Bitcoin',\n            price: 436,\n            key: 'BTC'\n          }, {\n            name: 'Etherium',\n            price: 445,\n            key: 'ETH'\n          }, {\n            name: 'Binance',\n            price: 445,\n            key: 'BNB'\n          }, {\n            name: 'Doge',\n            price: 445,\n            key: 'DOGE'\n          }, {\n            name: 'LiteCoin',\n            price: 445,\n            key: 'LTC'\n          }, {\n            name: 'Maker',\n            price: 445,\n            key: 'MKR'\n          }, {\n            name: 'Cardano',\n            price: 445,\n            key: 'ADA'\n          }, {\n            name: 'Monero',\n            price: 445,\n            key: 'XMR'\n          }, {\n            name: 'Stellar',\n            price: 445,\n            key: 'XLM'\n          }, {\n            name: 'IOTA',\n            price: 445,\n            key: 'MIOTA'\n          }, {\n            name: 'EOS.IO',\n            price: 445,\n            key: 'EOS'\n          }, {\n            name: 'Bitcoin Cash',\n            price: 445,\n            key: 'BCH'\n          }].map(coin => /*#__PURE__*/_jsxDEV(CoinComponent, {\n            coin: coin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 39\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: DownArrow,\n            style: {\n              width: 25,\n              height: 25,\n              marginTop: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph_container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph_wrpr\",\n          style: {\n            backdropFilter: `blur(100px)`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading_wrpr\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selectedCoin.key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"$\", selectedCoin.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingTop: 50,\n              backdropFilter: `blur(100px)`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Forcaste 15 minutes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              options: options,\n              data: data1,\n              style: {\n                width: 500,\n                height: '50vh',\n                color: 'yellow'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkSpace, \"Arv7aETooA9u0YEwcFHBLkaa28g=\");\n\n_c = WorkSpace;\nexport default WorkSpace;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkSpace\");","map":{"version":3,"sources":["/home/ansif/Programming/Projects/CryptoProject/src/pages/workSpace/WorkSpace.js"],"names":["React","useEffect","useState","Line","Navbar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","HomeImg","DownArrow","WorkSpace","selectedCoin","setSelectedCoin","name","price","key","options","responsive","plugins","legend","position","title","display","text","foreCastLabelCreator","date","Date","timeArray","i","push","formatAMPM","setMinutes","getMinutes","previousPredictionLabelCreator","reverse","hours","getHours","minutes","ampm","strTime","data1","labels","datasets","label","data","Array","map","Math","round","random","index","borderColor","backgroundColor","data2","register","CoinComponent","coin","color","border","transform","background","backgroundSize","width","height","marginTop","backdropFilter","paddingTop","flex"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport Navbar from '../../components/navbar/Navbar'\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport './workspace.css'\nimport HomeImg from '../../assets/images/home.png'\nimport DownArrow from '../../assets/images/down_arrow.png'\n\nfunction WorkSpace() {\n\n    const [selectedCoin, setSelectedCoin] = useState({ name: 'Bitcoin', price: 445, key: 'BTC' })\n    const options = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top',\n            },\n            title: {\n                display: false,\n                text: 'Chart.js Line Chart',\n            },\n        },\n    };\n\n    const foreCastLabelCreator = () => {\n        let date = new Date();\n        let timeArray = [];\n        for (let i = 0; i < 15; i++) {\n            timeArray.push(formatAMPM(date))\n            date.setMinutes(date.getMinutes() + 1)\n        }\n\n        // console.log(timeArray)\n        return timeArray\n    }\n\n    const previousPredictionLabelCreator = () => {\n        let date = new Date();\n        let timeArray = [];\n        for (let i = 0; i < 15; i++) {\n            timeArray.push(formatAMPM(date))\n            date.setMinutes(date.getMinutes() - 1)\n        }\n\n        // console.log(timeArray)\n        return timeArray.reverse();\n    }\n\n\n    function formatAMPM(date) {\n        var hours = date.getHours();\n        var minutes = date.getMinutes();\n        var ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12; // the hour '0' should be '12'\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        var strTime = hours + ':' + minutes + ' ' + ampm;\n        return strTime;\n    }\n    useEffect(() => {\n        foreCastLabelCreator()\n    }, [])\n\n\n\n    const data1 = {\n        labels: foreCastLabelCreator(),\n\n        datasets: [\n            // {\n            //     label: 'Dataset 1',\n            //     data: labels.map((i, index) => index),\n            //     borderColor: 'rgb(255, 99, 132)',\n            //     backgroundColor: 'rgba(255, 99, 132, 0.5)',\n            // },\n            {\n                label: 'Predicted Value',\n                data: [...new Array(15)]\n                    .map(() => Math.round(Math.random() * 200)).map((i, index) => i),\n                borderColor: 'yellow',\n                backgroundColor: 'yellow',\n\n            },\n        ],\n    };\n\n    const data2 = {\n        labels: previousPredictionLabelCreator(),\n\n        datasets: [\n            {\n                label: 'Actual Value',\n                data: [...new Array(15)]\n                    .map(() => Math.round(Math.random() * 200)).map((i, index) => i),\n                borderColor: 'aqua',\n                backgroundColor: 'aqua',\n            },\n            {\n                label: 'Predicted Value',\n                data: [...new Array(15)]\n                    .map(() => Math.round(Math.random() * 200)).map((i, index) => i),\n                borderColor: 'ghostwhite',\n                backgroundColor: 'ghostwhite',\n\n            },\n        ],\n    };\n    ChartJS.register(\n        CategoryScale,\n        LinearScale,\n        PointElement,\n        LineElement,\n        Title,\n        Tooltip,\n        Legend\n    );\n    const CoinComponent = ({ coin }) => {\n        return (<div className='coinComp'\n            style={selectedCoin.name == coin.name ? {\n                // backgroundColor: '#0d9078',\n                color: 'white',\n                border: `1px solid #0d9078`,\n                transform: `scale(1.2)`,\n\n            } : {}}\n            onClick={() => setSelectedCoin(coin)}\n\n        >\n            <h3>{coin.name}</h3>\n            <p>{coin.price}</p>\n        </div>)\n    }\n\n    return (\n        <div\n            className='workSpace'\n            style={{\n                background: `url(${HomeImg})`,\n                backgroundSize: 'cover'\n            }}\n        >\n            <Navbar />\n            <div className='sec_1'\n\n            >\n                <div className='sideBar'\n\n                >\n                    <div className='coinWrpr' >\n                        {[{ name: 'Bitcoin', price: 436, key: 'BTC' },\n                        { name: 'Etherium', price: 445, key: 'ETH' },\n                        { name: 'Binance', price: 445, key: 'BNB' },\n                        { name: 'Doge', price: 445, key: 'DOGE' },\n                        { name: 'LiteCoin', price: 445, key: 'LTC' },\n                        { name: 'Maker', price: 445, key: 'MKR' },\n                        { name: 'Cardano', price: 445, key: 'ADA' },\n                        { name: 'Monero', price: 445, key: 'XMR' },\n                        { name: 'Stellar', price: 445, key: 'XLM' },\n                        { name: 'IOTA', price: 445, key: 'MIOTA' },\n                        { name: 'EOS.IO', price: 445, key: 'EOS' },\n                        { name: 'Bitcoin Cash', price: 445, key: 'BCH' },\n\n                        ].map(coin => <CoinComponent coin={coin} />)}\n\n\n                    </div>\n                    <div className='overlay' >\n                        <img src={DownArrow} style={{ width: 25, height: 25, marginTop: 10 }} />\n\n                    </div>\n                </div>\n\n                <div className='graph_container'>\n                    <div\n                        className='graph_wrpr'\n                        style={{ backdropFilter: `blur(100px)` }}\n                    >\n                        <div className='heading_wrpr' >\n                            <h2>{selectedCoin.key}</h2>\n                            <p>${selectedCoin.price}</p>\n                        </div>\n\n                        <div\n                            style={{ paddingTop: 50, backdropFilter: `blur(100px)` }}\n                        >\n                            <p>Forcaste 15 minutes</p>\n                            <Line\n                                options={options}\n                                data={data1}\n                                style={{ width: 500, height: '50vh', color: 'yellow', }}\n\n                            />\n                        </div>\n                    </div>\n\n                    {/* <div\n                        style={{ marginTop: 50 }}\n                    >\n\n                        <p>Previous Prediction</p>\n                        <Line\n                            options={options}\n                            data={data2}\n                            style={{ width: 500, height: '70vh', color: 'yellow', }}\n                        />\n\n                    </div> */}\n                </div>\n                <div style={{ flex: 3 }} ></div>\n            </div>\n        </div>\n    )\n}\n\nexport default WorkSpace"]},"metadata":{},"sourceType":"module"}